[main]
#sessionIdCookie是sessionManager创建会话的Cookie模板
sessionIdCookie=org.apache.shiro.web.servlet.SimpleCookie

#用于Web环境的SessionMaanager的实现，可以替代ServletContainerSessionManager,自己维护会话，直接废弃了Servlet容器的会话管理
sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager

#设置Cookie的名字，默认JSESSION
sessionIdCookie.name=sid

#设置Cookie的域名,默认为空，即当前访问的域名
#sessionIdCookie.domain=sishuok.com

#设置Cookie的路径，默认空，即存储在域名根下
#sessionIdCookie.path=

#设置Cookie的过期时间，单位为秒，默认-1表示关闭浏览器时过期Cookie
sessionIdCookie.maxAge=1800

#如果设置为true,则客户端不会暴露客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本高攻击
sessionIdCookie.httpOnly=true

sessionManager.sessionIdCookie=$sessionIdCookie

#是否启用/禁用Session Id Cookie,默认是启用的，如果禁用将不会设置Session Id Cookie，
#即默认使用了Servlet容器的JSESSION，且通过URL重写（URL中的"JSESSION=id"部分）保存Session Id
sessionManager.sessionIdCookieEnabled=true
securityManager.sessionManager=$sessionManager

#配置会话监听器
sessionListener1=session.listener.MySessionListener1
sessionListener2=session.listener.MySessionListener2
sessionManager.sessionListeners=$sessionListener1,$sessionListener2

#配置会话存储
#sessionDAO=org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
#设置Session缓存名字，默认就是shiro-activeSessionCache
#sessionDAO. activeSessionsCacheName=shiro-activeSessionCache
#sessionManager.sessionDAO=$sessionDAO
#缓存管理器，用于管理缓存的，此时使用Ehcache实现
#cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
#设置ehcache缓存的配置文件
#cacheManager.cacheManagerConfigFile=classpath:ehcache.xml
#设置 SecurityManager的cacheManager,会自动设置实现了CacheManagerAware接口的相应对象，如SessionDAO的cacheManager
#securityManager.cacheManager = $cacheManager

sessionDAO=session.dao.MySessionDAO
#用于生成会话ID，默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成
sessionIdGenerator=org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator
sessionDAO.sessionIdGenerator=$sessionIdGenerator
sessionManager.sessionDAO=$sessionDAO
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile=classpath:ehcache.xml
securityManager.cacheManager = $cacheManager

#设置会话的全局过期时间（毫秒为单位），默认30分钟
sessionManager.globalSessionTimeout=1800000

#设置会话验证
#会话验证调度器，sessionManager默认就是使用ExecutorServiceSessionValidationScheduler,其使用JDK的ScheduledExecutorService进行定期调用并验证会话是否过期
#sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
#设置调度时间间隔，单位毫秒，默认1小时
#sessionValidationScheduler.interval = 3600000
#设置会话验证调度器进行会话验证时的会话管理器
#sessionValidationScheduler.sessionManager=$sessionManager
#设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期
#sessionManager.globalSessionTimeout=1800000
#是否开启会话验证器，默认是开启
#sessionManager.sessionValidationSchedulerEnabled=true
#设置会话验证调度器，默认使用ExecutorServiceSessionValidationScheduler
#sessionManager.sessionValidationScheduler=$sessionValidationScheduler

#自定义会话验证
sessionValidationScheduler=session.scheduler.MySessionValidationScheduler
sessionValidationScheduler.interval = 10000
sessionValidationScheduler.sessionManager=$sessionManager
sessionManager.sessionValidationScheduler=$sessionValidationScheduler
#设置会话过期时是否删除过期的会话，默认为true
sessionManager.deleteInvalidSessions=true


sessionFactory=session.mgt.OnlineSessionFactory
sessionManager.sessionFactory=$sessionFactory

securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

[filters]
#拦截器
online=org.apache.shiro.session.filter.OnlineSessionFilter
online.forceLogoutUrl=/login.jsp
online.sessionDAO=$sessionDAO


[users]
zhang=123,admin
wang=123

[roles]
admin=user:*,menu:*

[urls]
/logout=logout
/login.jsp=authc
/**=anon