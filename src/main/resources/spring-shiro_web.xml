<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 缓存管理器：使用Ehcache实现 ,导入shiro-ehcache依赖 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:spring_ehcache.xml" />
	</bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="spring.credentials.RetryLimitHashedCredentialsMatcher">
		<!-- 指定缓存管理器 -->
		<constructor-arg ref="cacheManager" />
		<!-- 指定散列算法 -->
		<property name="hashAlgorithmName" value="md5" />
		<!-- 指定散列迭代次数 -->
		<property name="hashIterations" value="2" />
		<!-- 表示是否存储散列后的密码为16进制，默认base64 -->
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="realm.realm.realm.UserRealm">
		<property name="userService" ref="userService" />
		<!-- 指定凭证匹配器 -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<!-- 启用缓存，默认false -->
		<property name="cachingEnabled" value="true" />
		<!-- 启用身份认证缓存，即缓存Authentication信息，默认false -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 缓存Authentication信息的缓存名称 -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!-- 启用授权缓存，即缓存Authorization信息，默认false -->
		<property name="authorizationCachingEnabled" value="true" />
		<!-- 缓存Authorization信息的缓存名称 -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 会话ID生成器,默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<!-- 如果设置为true,则客户端不会暴露客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本高攻击 -->
		<property name="httpOnly" value="true" />
		<!-- 设置Cookie的过期时间，单位为秒，默认-1表示关闭浏览器时过期Cookie -->
		<property name="maxAge" value="-1" />
	</bean>

	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- 指定session缓存名称，默认shiro-activeSessionCache -->
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<!-- 指定session ID -->
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 ，让无效的session释放 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<!-- 设置session的失效扫扫描间隔，单位毫秒 -->
		<property name="sessionValidationInterval" value="1800000" />
		<!-- 指定会话管理器 -->
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置会话的全局过期时间（毫秒为单位），默认30分钟 -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 设置会话过期时是否删除过期的会话，默认为true -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 是否开启会话调度器，默认是开启 -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 指定会话验证调度器 -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- 指定会话DAO -->
		<property name="sessionDAO" ref="sessionDAO" />
		<!-- 是否开启会话cookie模板 -->
		<property name="sessionIdCookieEnabled" value="true" />
		<!-- 指定会话cookie模板 -->
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
		<!-- 指定realm实现 -->
		<property name="realm" ref="userRealm" />
		<!-- 指定会话管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 指定缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
		<!-- 指定rememberMe管理器 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager)，设置SecurityManager到静态内存区，单例模式 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<!-- 指定登录表单提交用户名参数名 -->
		<property name="usernameParam" value="username" />
		<!-- 指定登录表单提交密码参数IGN -->
		<property name="passwordParam" value="password" />
		<!-- 指定当身份验证时的登录表单 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 指定登录失败时的request属性key（默认shiroLoginFailure）,这样可以在登录表单得到该错误key显示相应的错误信息 -->
		<property name="failureKeyAttribute" value="shiroLoginFailure" />
		<!-- 是否记住我 -->
		<property name="rememberMeParam" value="rememberMe" />
	</bean>

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 指定安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 登录界面设置 -->
		<property name="loginUrl" value="/login.jsp" />
		<!-- 无权限界面设置 -->
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- 用于定义自己的过滤器，即ini配置中的[filters]部分 -->
		<property name="filters">
			<util:map>
				<!-- 指定基于表单验证 -->
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</util:map>
		</property>
		<!-- 用于声明url和filter的关系，即ini配置中的[urls]部分 -->
		<property name="filterChainDefinitions">
			<value>
				/index.jsp = anon
				/unauthorized.jsp = anon
				/login.jsp = authc
				/logout = logout
				/** = user
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>